% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Features-class.R, R/Features-constructors.R
\name{Features}
\alias{Features}
\alias{Features-class}
\alias{class:Features}
\title{Quantitative MS Features}
\usage{
Features(...)
}
\arguments{
\item{...}{See [MultiAssayExperiment].}
}
\value{
A new instance of class `Features`.
}
\description{
Conceptually, a \code{Features} object holds a set of \emph{assays}. These
are composed of a \code{matrix} (or \code{array}) containing quantitative
data and row annotations (meta-data).  The number and the names
(nature) of columns (samples) are always the same across the
matrices, but the number of rows (features) can vary. Each one of
these matrices has a set of feature annotations (encoded as
\code{DataFrame} objects), that have the same number of rows as the
assay matrix their are associated to, and an arbitrary number of
columns (feature variables). Such matrix and feature annotation
pairs are typically defined as \code{MSnSet} or \code{SummarizedExperiment}
objects. In addition, a \code{Features} object also uses a single
\code{DataFrame} to annotate the samples (columns) represented in all
the matrices.
}
\details{
A typical use case for such \code{Features} object is to represent
quantitative proteomics (or metabolomics) data, where different
assays represent quantitation data at the PSM (the main assay),
peptide and protein level, and where peptide values are computed
from the PSM data, and the protein-level data is calculated based
on the peptide-level values.

The largest assay (the one with the highest number of features) is
considered the main assay, from which the other ones are derived
by aggregating/combining several rows into a single one.

The recommended way to create \code{Features} objects is the use the
\code{readFeatures()} function, that creates an instance from tabular
data. The \code{Features} constructor can be used to create objects
from their bare parts.  It is the user's responsability to make
sure that these match the class validity requirements.
}
\section{Accessors}{


See \link{MultiAssayExperiment}.
}

\examples{
## ------------------------
## An empty Features object
## ------------------------

Features()

## -----------------------------------
## Creating a Features object manually
## -----------------------------------

## two assays (matrices) with matching column names
m1 <- matrix(1:40, ncol = 4)
m2 <- matrix(1:16, ncol = 4)
sample_names <- paste0("S", 1:4)
colnames(m1) <- colnames(m2) <- sample_names
rownames(m1) <- letters[1:10]
rownames(m2) <- letters[1:4]

## two corresponding feature metadata with appropriate row names
df1 <- DataFrame(Fa = 1:10, Fb = letters[1:10],
                 row.names = rownames(m1))
df2 <- DataFrame(row.names = rownames(m2))

(se1 <- SummarizedExperiment(m1, df1))
(se2 <- SummarizedExperiment(m2, df2))

## Sample annotation (colData)
cd <- DataFrame(Var1 = rnorm(4),
                Var2 = LETTERS[1:4],
                row.names = sample_names)

el <- list(assay1 = se1, assay2 = se2)
fts1 <- Features(el, colData = cd)
fts1

## -------------------------------------------------
## Creating a Features object from a data.frame (see
## ?readFeatures) for details
## -------------------------------------------------

data(hlpsms)
fts2 <- readFeatures(hlpsms, ecol = 1:10, name = "psms")
fts2

fts2[[1]]
fts2[["psms"]]
}
\seealso{
The \code{\link[=readFeatures]{readFeatures()}} constructor.
}
\author{
Laurent Gatto
}
