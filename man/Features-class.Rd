% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Features-class.R, R/Features-constructors.R
\name{Features}
\alias{Features}
\alias{Features-class}
\alias{class:Features}
\title{Quantitative MS Features}
\usage{
Features(assays = SimpleList(), featureData = SimpleList(),
  colData = DataFrame(), metadata = list())
}
\arguments{
\item{assays}{A `SimpleList` containing the object's assays (typically
matrices).}

\item{featureData}{A `SimpleList` containing the object's feature metadata
as `DataFrame` instances.}

\item{colData}{A `DataFrame` with column (sample annotations).}

\item{metadata}{A `list()` with arbitrary object annotations.}
}
\value{
A new instance of class `Features`.
}
\description{
Conceptually, a \code{Features} object holds a set of \code{matrix} (or
\code{array}) elements containing quantitative data. The number of
columns (samples) are always the same across the matrices, but the
number of rows (features) can vary. Each one of these matrices has
a set of feature annotation (encoded as \code{DataFrame} objects), that
have the same number of rows as the assay matrix their are
associated to, and an arbitrary number of columns (feature
variables). In addition, a \code{Features} object also uses a single
\code{DataFrame} to annotate the samples (columns) represented in all
the matrices. The largest assay matrix (the one with the highest
number of features) is considered the main assay, from which the
other ones are derived by aggregating/combining several rows into
a single one.

A typical use case for such \code{Features} object if to represent
quantitative proteomics or metabolomics data, where different
assays represent quantitation data at the PSM (the main assay),
peptide and protein level, and where peptide values are computed
from the PSM data, and the protein-level data is calculated based
on the peptide-level values.

The recommended way to create \code{Features} objects is the use the
\code{[readFeatures()]} function, that creates an instance from tabular data. The
\code{Features} constructor can be used to create objects from their bare parts.
It iss the user's responsability to make sure that these match the class
validity requirements.
}
\details{
A \code{Features} instance must comply with the following requirements:
\itemize{
\item Assays are matrix-like objects that all have the same number of
columns. They are passed to the constructor as an \code{SimpleList} object
names \code{assays}, and can be accessed with the \code{assays} accessor.
\item Each assay is documented by feature variable \code{DataFrame}. Both have the
same number of rows. These feature metadata \code{DataFrame}s are passed to the
constructor as an \code{SimpleList} object names \code{featureData} and can be
accessed with the \code{featureData} accessor. The number of rows and the row
names of each of these \code{DataFrame} instances must match the number of rows
and rows names of the corresponding the assay. These \code{DataFrame} instance
are mandatory but can have no columns.
\item The samples/columns of the assays are documented in a \code{DataFrame} named
\code{colData} and can be accessed with the \code{colData} accessor. The number of
rows and the row names of this \code{DataFrame} must match the number of
columns and column names of the assays. This \code{DataFrame} instance is
mandatory but can have no columns.
\item A \code{list} protiding the global metadata annotating the object as a whole,
named \code{metadata}. It can be accessed/replaced with the \code{metadata}
accessor/replacement method.
}
}
\examples{

## Creating a Features object manually

m1 <- matrix(1:40, ncol = 4)
m2 <- matrix(1:16, ncol = 4)
colnames(m1) <- colnames(m2) <- paste0("S", 1:4)
rownames(m1) <- letters[1:10]
rownames(m2) <- letters[23:26]

df1 <- DataFrame(Fa = 1:10, Fb = letters[1:10],
                 row.names = letters[1:10])
df2 <- DataFrame(row.names = letters[23:26])

ft1 <- Features(assays = SimpleList(assay1 = m1, assay2 = m2),
                featureData = SimpleList(assay1 = df1, assay2 = df2),
                colData = DataFrame(row.names = colnames(m1)),
                metadata = list(paste("Generated on", Sys.Date())))
ft1

## Creating a Features object from a data.frame
data(hlpsms)
ft2 <- readFeatures(hlpsms, ecol = 1:10)
ft2

## The assay isn't named yet, so let's name it 'psms', to clarify that the
## data are PSM-level quantitations.
names(ft2)
names(ft2) <- "psms"
ft2
}
\author{
Laurent Gatto
}
