% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Features-class.R
\name{Features}
\alias{Features}
\alias{Features-class}
\alias{class:Features}
\title{Quantitative MS Features}
\description{
Conceptually, a \code{Features} object holds a set of \code{matrix} (or
\code{array}) elements containing quantitative data. The number of
columns (samples) are always the same across the matrices, but the
number of rows (features) can vary. Each one of these matrices has
a set of feature annotation (encoded as \code{DataFrame} objects), that
have the same number of rows as the assay matrix their are
associated to, and an arbitrary number of columns (feature
variables). In addition, a \code{Features} object also uses a single
\code{DataFrame} to annotate the samples (columns) represented in all
the matrices. The largest assay matrix (the one with the highest
number of features) is considered the main assay, from which the
other ones are derived by aggregating/combining several rows into
a single one.

A typical use case for such \code{Features} object if to represent
quantitative proteomics or metabolomics data, where different
assays represent quantitation data at the PSM (the main assay),
peptide and protein level, and where peptide values are computed
from the PSM data, and the protein-level data is calculated based
on the peptide-level values.

\code{Features} objects can be created with the \code{Features} constructor
or using the \code{[readFeatures()]} function to create an instance
from tabular data. The constructor, that is used to create objects
from their bare parts, that takes the following parameters:

TODO
}
\details{
More details come here ...
}
\examples{

m1 <- matrix(1:40, ncol = 4)
m2 <- matrix(1:16, ncol = 4)
colnames(m1) <- colnames(m2) <- paste0("S", 1:4)
rownames(m1) <- letters[1:10]
rownames(m2) <- letters[1:4]

df1 <- DataFrame(Fa = 1:10, Fb = letters[1:10],
                 row.names = letters[1:10])
df2 <- DataFrame(row.names = letters[1:4])

x <- new("Features",
         assays = SimpleList(assay1 = m1, assay2 = m2),
         featureData = SimpleList(assay1 = df1, assay2 = df2),
         colData = DataFrame(row.names = colnames(m1)),
         metadata = list(paste("Generated on", Sys.Date())))
x
}
\author{
Laurent Gatto
}
