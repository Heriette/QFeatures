% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reduce.R
\name{reduceDataFrame}
\alias{reduceDataFrame}
\alias{expandDataFrame}
\title{Reduces and expands a `DataFrame`

A long dataframe can be *reduced* by mergeing certain rows into a
single one.  These new variables are constructed as a `SimpleList`
containing all the original values. Invariant columns, i.e columns
that have the same value along all the rows that need to be
merged, can be shrunk into a new variables containing that
invariant value (rather than in list columns). The grouping of
rows, i.e. the rows that need to be shrunk together as one, is
defined by a vector.

The opposite operation is *expand*. But note that for a
`DataFrame` to be expanded back, it must not to be simplified.}
\usage{
reduceDataFrame(x, k, count = FALSE, simplify = TRUE, drop = FALSE)

expandDataFrame(x, k = NULL)
}
\arguments{
\item{x}{The `DataFrame` to be reduced or expanded.}

\item{k}{A ‘vector’ of length `nrow(x)` defining the grouping
based on which the `DataFrame` will be shrunk.}

\item{count}{`logical(1)` specifying of an additional column
(called by default `.n`) with the tally of rows shrunk into on
new row should be added. Note that if already existing, `.n`
will be silently overwritten.}

\item{simplify}{A `logical(1)` defining if invariant columns
should be converted to simple lists. Default is `TRUE`.}

\item{drop}{A `logical(1)` specifying whether the non-invariant
columns should be dropped altogether. Default is `FALSE`.}
}
\value{
An expanded (reduced) `DataFrame`.
}
\description{
Reduces and expands a `DataFrame`

A long dataframe can be *reduced* by mergeing certain rows into a
single one.  These new variables are constructed as a `SimpleList`
containing all the original values. Invariant columns, i.e columns
that have the same value along all the rows that need to be
merged, can be shrunk into a new variables containing that
invariant value (rather than in list columns). The grouping of
rows, i.e. the rows that need to be shrunk together as one, is
defined by a vector.

The opposite operation is *expand*. But note that for a
`DataFrame` to be expanded back, it must not to be simplified.
}
\examples{
library("IRanges")

k <- sample(100, 1e3, replace = TRUE)
df <- DataFrame(k = k,
                x = round(rnorm(length(k)), 2),
                y = seq_len(length(k)),
                z = sample(LETTERS, length(k), replace = TRUE),
                ir = IRanges(seq_along(k), width = 10),
                r = Rle(sample(5, length(k), replace = TRUE)),
                invar = k + 1)
df

## Shinks the DataFrame
df2 <- reduceDataFrame(df, df$k)
df2

## With a tally of the number of members in each group
reduceDataFrame(df, df$k, count = TRUE)

## Much faster, but more crowded result
df3 <- reduceDataFrame(df, df$k, simplify = FALSE)
df3

## Drop all non-invariant columns
reduceDataFrame(df, df$k, drop = TRUE)
}
\author{
Laurent Gatto
}
