% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Features-aggregation.R
\name{aggregateFeatures}
\alias{aggregateFeatures}
\alias{aggregateFeatures,Features-method}
\title{Aggregate an assay's quantitative features}
\usage{
\S4method{aggregateFeatures}{Features}(
  object,
  i,
  fcol,
  name = "newAssay",
  fun = MsCoreUtils::robustSummary,
  ...
)
}
\arguments{
\item{object}{An instance of class \link{Features}.}

\item{i}{The index or name of the assay which features will be
aggregated the create the new assay.}

\item{fcol}{The feature variable of assay \code{i} defining how to
summerise the features.}

\item{name}{A \code{character(1)} naming the new assay. Default is
\code{newAssay}. Note that the function will fail if there's
already an assay with \code{name}.}

\item{fun}{A function used for quantitative feature
aggregation. See Details for examples.}

\item{...}{Additional parameters passed the \code{fun}.}
}
\value{
A \code{Features} object with an additional assay.
}
\description{
This function aggregates the quantitative features of an assay,
applying a summarisation function (\code{fun}) to sets of features as
defined by the \code{fcol} feature variable. The new assay's features
will be named based on the unique \code{fcol} values.
}
\details{
Aggregation is performed by a function that takes a matrix as
input and returns a vector of length equal to \code{ncol(x)}. Examples
thereof are
\itemize{
\item \code{\link[MsCoreUtils:medianPolish]{MsCoreUtils::medianPolish()}} to fits an additive model (two way
decomposition) using Tukey's median polish_ procedure using \code{\link[stats:medpolish]{stats::medpolish()}};
\item \code{\link[MsCoreUtils:robustSummary]{MsCoreUtils::robustSummary()}} to calculate a robust aggregation
using \code{\link[MASS:rlm]{MASS::rlm()}} (default);
\item \code{\link[base:colMeans]{base::colMeans()}} to use the mean of each column;
\item \code{\link[matrixStats:colMedians]{matrixStats::colMedians()}} to use the median of each column.
\item \code{\link[base:colSums]{base::colSums()}} to use the sum of each column;
}
}
\examples{

## An example Features with PSM-level data
data(feat1)

## Aggregate PSMs into peptides
feat1 <- aggregateFeatures(feat1, "psms", "Sequence", name = "peptides")
feat1

## Aggregate peptides into proteins
feat1 <- aggregateFeatures(feat1, "peptides", "Protein", name = "proteins")
feat1
}
\seealso{
The \emph{Features} vignette provides an extended example and
the \emph{Processing} vignette, for a complete quantitative
proteomics data processing pipeline.
}
