% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shrink.R
\name{shrink}
\alias{shrink}
\alias{grow}
\title{Shrinks and grows a `DataFrame`}
\usage{
shrink(x, k, count = FALSE)

grow(x)
}
\arguments{
\item{x}{The `DataFrame` to be shrunk.}

\item{k}{A ‘vector’ of length `nrow(x)` defining the grouping
based on which the `DataFrame` will be shrunk.}

\item{count}{`logical(1)` specifying of an additional column
(called by default `.n`) with the tally of rows shrunk into on
new row should be added. Note that if already existing, `.n`
will be silently overwritten.}
}
\description{
A long dataframe can be `shrunk` by mergeing certain rows into a
single one. Invariant column, i.e columns that have the the same
value along all the rows that need to be merged, are shrunk into a
new variables containing that invariant value. Otherwise, the new
variables is constructed as a `SimpleList` containing all the
original values. The grouping of rows, i.e. the rows that need to
be shrunk together as one, is defined by a vector.
}
\details{
A shrunken `DataFrame` can be grown back using the `grow`
function.

It is important to note that if new values are added to the
shrunken `DataFrame`, these will be repeated to create invariant
values, which might not be relevant.

Parallel processing is applied automatically using the
`BiocParallel` package. See `bpparam()` for the current
parallelisation backend, `registered()` for all registered
backends, and use `register(...)` to set a new backend.
}
\examples{
library("IRanges")
k <- sample(20, 1e5, replace = TRUE)
df <- DataFrame(k = k,
                x = round(rnorm(length(k)), 2),
                y = seq_len(length(k)),
                z = sample(LETTERS, length(k), replace = TRUE),
                ir = IRanges(seq_along(k), width = 10),
                r = Rle(sample(5, length(k), replace = TRUE)))
df

df2 <- shrink(df, df$k, count = TRUE)
df2

df3 <- grow(df2)
df3

stopifnot(identical(df[order(df$k), ], df3[, 1:6]))
}
\author{
Laurent Gatto
}
